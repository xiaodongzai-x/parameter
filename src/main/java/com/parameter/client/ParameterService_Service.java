
package com.parameter.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ParameterService", targetNamespace = "http://service.parameter.com/", wsdlLocation = "${WSDLURL}")
public class ParameterService_Service
        extends Service
{

    private static String WSDLURL;
    private static URL PARAMETERSERVICE_WSDL_LOCATION;
    private    static WebServiceException PARAMETERSERVICE_EXCEPTION;
    private final static QName PARAMETERSERVICE_QNAME = new QName("http://service.parameter.com/", "ParameterService");

    public static void getIPPort(String ipAndPort){
        URL url = null;
        WebServiceException e = null;
        WSDLURL = "http://"+ ipAndPort+"/parameter/api?wsdl";
        try {
            url = new URL(WSDLURL);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PARAMETERSERVICE_WSDL_LOCATION = url;
        PARAMETERSERVICE_EXCEPTION = e;
    }

    public ParameterService_Service() {
        super(__getWsdlLocation(), PARAMETERSERVICE_QNAME);
    }

    public ParameterService_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), PARAMETERSERVICE_QNAME, features);
    }

    public ParameterService_Service(URL wsdlLocation) {
        super(wsdlLocation, PARAMETERSERVICE_QNAME);
    }

    public ParameterService_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PARAMETERSERVICE_QNAME, features);
    }

    public ParameterService_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ParameterService_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ParameterService
     */
    @WebEndpoint(name = "ParameterServiceImplPort")
    public ParameterService getParameterServiceImplPort() {
        return super.getPort(new QName("http://service.parameter.com/", "ParameterServiceImplPort"), ParameterService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ParameterService
     */
    @WebEndpoint(name = "ParameterServiceImplPort")
    public ParameterService getParameterServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.parameter.com/", "ParameterServiceImplPort"), ParameterService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PARAMETERSERVICE_EXCEPTION!= null) {
            throw PARAMETERSERVICE_EXCEPTION;
        }
        return PARAMETERSERVICE_WSDL_LOCATION;
    }

}
